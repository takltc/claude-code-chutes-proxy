name: Build and Push Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*', '*.*.*' ]
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name || github.event.release.tag_name }}

      - name: Read version
        id: vars
        run: echo "version=$(tr -d '\n\r' < VERSION | xargs)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags (version, latest, release/tag)
        id: tags
        env:
          IMG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          VERSION: ${{ steps.vars.outputs.version }}
          REF_TYPE: ${{ github.ref_type }}
          REF_NAME: ${{ github.ref_name }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          EVENT_NAME: ${{ github.event_name }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          set -euo pipefail
          TAGS="${IMG}:${VERSION}"

          # Add 'latest' for default branch pushes
          if [ "${REF_TYPE}" = "branch" ] && [ "${REF_NAME}" = "${DEFAULT_BRANCH}" ]; then
            TAGS="${TAGS}\n${IMG}:latest"
          fi

          # Add tags for tag push or release
          tagname=""
          if [ "${EVENT_NAME}" = "release" ] && [ -n "${RELEASE_TAG}" ]; then
            tagname="${RELEASE_TAG}"
          elif [ "${REF_TYPE}" = "tag" ] && [ -n "${REF_NAME}" ]; then
            tagname="${REF_NAME}"
          fi

          if [ -n "${tagname}" ]; then
            TAGS="${TAGS}\n${IMG}:${tagname}"
            if printf '%s' "${tagname}" | grep -Eq '^v[0-9]'; then
              stripped="${tagname#v}"
              TAGS="${TAGS}\n${IMG}:${stripped}"
            fi
          fi

          echo "list<<EOF" >> "$GITHUB_OUTPUT"
          printf '%b\n' "${TAGS}" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.list }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
